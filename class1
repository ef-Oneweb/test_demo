Step 41
Use the button element to create a clickable button. For example, <button>Click Here</button> creates a button with the text Click Here.

Add a button element with the text Submit below the input element. The default behavior of clicking a form button without any attributes submits the form to the location specified in the form's action attribute.

Step 42
Even though you added your button below the text input, they appear next to each other on the page. That's because both input and button elements are inline elements, which don't appear on new lines.

You learned previously that the button submits the form by default, but you can explicitly add the type attribute with the value submit to make it clearer. Go ahead and do this to specify where this button should submit the form.

Step 43
You can use radio buttons for questions where you want only one answer out of multiple options.

Here is an example of a radio button with the option of cat: <input type="radio"> cat. Remember that input elements are self-closing.

Before the text input, add a radio button with the option set as: Indoor

Step 44
label elements are used to help associate the text for an input element with the input element itself (especially for assistive technologies like screen readers). For example, <label><input type="radio"> cat</label> makes it so clicking the word cat also selects the corresponding radio button.

Nest your radio button inside a label element.

Step 45
The id attribute is used to identify specific HTML elements. Each id attribute's value must be unique from all other id values for the entire page.

Add an id attribute with the value indoor to the radio button. When elements have multiple attributes, the order of the attributes doesn't matter.

Step 46
Nest another radio button with the option Outdoor in a new label element. The new radio button should be placed after the first one. Also, set its id attribute value to: outdoor

Step 47
Notice that both radio buttons can be selected at the same time. To make it so selecting one radio button automatically deselects the other, both buttons must have a name attribute with the same value.

Add the name attribute with the value indoor-outdoor to both radio buttons.

Step 48
If you select the Indoor radio button and submit the form, the form data for the button is based on its name and value attributes. Since your radio buttons do not have a value attribute, the form data will include indoor-outdoor=on, which is not useful when you have multiple buttons.

Add a value attribute to both radio buttons. For convenience, set the button's value attribute to the same value as its id attribute.

Step 49
The fieldset element is used to group related inputs and labels together in a web form. fieldset elements are block-level elements, meaning that they appear on a new line.

Nest the Indoor and Outdoor radio buttons within a fieldset element, and don't forget to indent the radio buttons.

Step 50
The legend element acts as a caption for the content in the fieldset element. It gives users context about what they should enter into that part of the form.

Add a legend element with the text Is your cat an indoor or outdoor cat? above both of the radio buttons.

Step 51
Next, you are going to add some new form input elements, so add another fieldset element directly below the current fieldset element.

Step 52
Add a legend element with the text What's your cat's personality? inside the second fieldset element.

Step 53
Forms commonly use checkboxes for questions that may have more than one answer. For example, here's a checkbox with the option of tacos: <input type="checkbox"> tacos.

Under the legend element you just added, add an input with its type attribute set to checkbox and give it the option of: Loving

Step 54
Add an id attribute with the value loving to the checkbox input.

Step 55
There's another way to associate an input element's text with the element itself. You can nest the text within a label element and add a for attribute with the same value as the input element's id attribute.

Associate the text Loving with the checkbox by only nesting the text Loving in a label element and place it to the right side of the checkbox input element.

Step 56
Add the name attribute with the value personality to the checkbox input element.

While you won't notice this in the browser, doing this makes it easier for a server to process your web form, especially when there are multiple checkboxes.

Step 57
Add another checkbox after the one you just added. The id attribute value should be lazy and the name attribute value should be the same as the last checkbox.

Also add a label element to the right of the new checkbox with the text Lazy. Make sure to associate the label element with the new checkbox using the for attribute.

Step 58
Add a final checkbox after the previous one with an id attribute value of energetic. The name attribute should be the same as the previous checkbox.

Also add a label element to the right of the new checkbox with text Energetic. Make sure to associate the label element with the new checkbox.

Step 59
Like radio buttons, form data for selected checkboxes are name / value attribute pairs. While the value attribute is optional, it's best practice to include it with any checkboxes or radio buttons on the page.

Add a value attribute to each checkbox. For convenience, set each checkbox's value attribute to the same value as its id attribute.

Step 60
In order to make a checkbox checked or radio button selected by default, you need to add the checked attribute to it. There's no need to set a value to the checked attribute. Instead, just add the word checked to the input element, making sure there is space between it and other attributes.

Make the first radio button and the first checkbox selected by default.

Step 61
Now you will add a footer section to the page. After the main element, add a footer element.

Step 62
Nest a p element with the text No Copyright - ef-oneweb.com within the footer element.

Step 63
Make the text ef-oneweb.com into a link by enclosing it in an anchor (a) element. The href attribute should be set to https://www.ef-oneweb.com.

Step 64
Notice that everything you've added to the page so far is inside the body element. All page content elements that should be rendered to the page go inside the body element. However, other important information goes inside the head element.

Add a head element just above the body element.

Step 65
The title element determines what browsers show in the title bar or tab for the page.

Add a title element within the head element using the text below: CatPhotoApp

Step 66
Notice that the entire contents of the page are nested within an html element. All other elements must be descendants of this html element.

Add the lang attribute with the value en to the opening html tag to specify that the language of the page is English.

Step 67
All pages should begin with <!DOCTYPE html>. This special string is known as a declaration and ensures the browser tries to meet industry-wide specifications.

Add this declaration as the first line of the code.

Step 68
One more thing. You should allow people to use their native language. Tell the browser to encode multiple languages by adding a meta element as a child of the head element. Set its charset attribute to UTF-8.
